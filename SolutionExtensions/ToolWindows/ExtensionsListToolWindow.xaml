<UserControl x:Class="SolutionExtensions.ToolWindows.ExtensionsListToolWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SolutionExtensions.ToolWindows"             
             xmlns:model="clr-namespace:SolutionExtensions"
             xmlns:toolkit="clr-namespace:Community.VisualStudio.Toolkit;assembly=Community.VisualStudio.Toolkit"              
             xmlns:shell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"             
             toolkit:Themes.UseVsTheme="True"
             mc:Ignorable="d" 
             d:Background="White"
             Loaded="Control_Loaded"
             d:DataContext="{d:DesignInstance Type=local:VM}"
             d:DesignHeight="396.91" d:DesignWidth="229.916">
    <UserControl.Resources>
        <ResourceDictionary>
            <!-- 
            To customize a style provided by the toolkit, you need to make the resources 
            available by including the resource dictionary from the toolkit:
            -->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="{x:Static toolkit:ToolkitResourceKeys.ThemeResourcesUri}"/>
            </ResourceDictionary.MergedDictionaries>

            <!--
            Now you can create your own styles that are based on the toolkit's styles.
            -->
            <Style TargetType="TextBox" BasedOn="{StaticResource {x:Static toolkit:ToolkitResourceKeys.TextBoxStyleKey}}">
                <Setter Property="BorderBrush" Value="Red" />
            </Style>

            <!--
            The toolkit only defines a few customized styles. Most styles come from the default Visual Studio
            styles. These can be referenced using the keys from `Microsoft.VisualStudio.Shell.VsResourceKeys`.
            -->
            <Style TargetType="Button" BasedOn="{StaticResource {x:Static shell:VsResourceKeys.ThemedDialogButtonStyleKey}}">
                <Setter Property="Foreground" Value="Green" />
            </Style>
            <BooleanToVisibilityConverter x:Key="boolToVisi"/>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <!-- toolbar -->
        <StackPanel Margin="3" Orientation="Horizontal">
            <StackPanel.Resources>
                <Style TargetType="Button" BasedOn="{x:Null}">
                    <!--<Setter Property="HorizontalAlignment" Value="Left"/>-->
                    <Setter Property="Padding" Value="10,0"/>
                    <Setter Property="Margin" Value="0,0,5,0"/>
                </Style>
            </StackPanel.Resources>
            <Button Click="AddItem_Click">+ Add</Button>
            <Button Click="Delete_Click" IsEnabled="{Binding IsSelected}">🗙 Delete</Button>
            <Button Click="Run_Click" IsEnabled="{Binding IsSelected}">▶ Run</Button>
            <Button Click="Load_Click">(Load)</Button>
            <Button Click="Save_Click">(Save)</Button>
        </StackPanel>
        <!-- list of textensions -->
        <ListBox Grid.Row="1" ItemsSource="{Binding Model.Extensions}" SelectedItem="{Binding SelectedItem}">
            <ListBox.ItemTemplate>
                <DataTemplate DataType="{x:Type model:ExtensionItem}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Content="{Binding Title}" FontWeight="Bold"/>
                        <StackPanel Grid.Row="1" Orientation="Horizontal">
                            <StackPanel.Resources>
                                <!--<Style TargetType="TextBlock">
                                    <Setter Property="FontSize" Value="10"/>
                                </Style>-->
                            </StackPanel.Resources>
                                <TextBlock Text="{Binding ClassName}" Width="150"/>
                            <TextBlock Text="{Binding DllPath}"/>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <!-- editor -->
        <StackPanel Grid.Row="2" Margin="10">
            <StackPanel.Resources>
                <!--<Style TargetType="Label">
                    <Setter Property="Margin" Value="0,3,0,0"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Padding" Value="0,0"/> 
                </Style>
                <Style TargetType="TextBox">
                    <Setter Property="Margin" Value="0"/>
                </Style>-->
            </StackPanel.Resources>
            <!--<Border>
                <TextBlock>Selected item</TextBlock>
            </Border>-->
            <TextBlock Foreground="Red" Visibility="{Binding ValidationMessage,Converter={StaticResource boolToVisi}}"><Run>⚠</Run><Run Text="{Binding ValidationMessage}"></Run></TextBlock>
            <Label Content="Title"/>
            <TextBox Text="{Binding SelectedItem.Title, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="Class Name"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <!--<TextBox Text="{Binding SelectedItem.ClassName, UpdateSourceTrigger=PropertyChanged}" Margin="0"/>-->
                <ComboBox Grid.Column="0" IsEditable="True" DropDownOpened="PickClass_Opened" SelectedValue="{Binding SelectedItem.ClassName}"></ComboBox>
            </Grid>
            <Label Content="DLL Path"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBox Text="{Binding SelectedItem.DllPath, UpdateSourceTrigger=PropertyChanged}"/>
                <Button Grid.Column="1" Padding="5,0" Width="20" Click="BrowseDll_Click">...</Button>
            </Grid>
        </StackPanel>
    </Grid>
</UserControl>
