<UserControl x:Class="SolutionExtensions.ToolWindows.ExtensionsListToolWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SolutionExtensions.ToolWindows"             
             xmlns:model="clr-namespace:SolutionExtensions"
             xmlns:toolkit="clr-namespace:Community.VisualStudio.Toolkit;assembly=Community.VisualStudio.Toolkit"              
             xmlns:shell="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.15.0"             
             xmlns:cmt="uri:comments"
             toolkit:Themes.UseVsTheme="True"
             mc:Ignorable="d cmt" 
             d:Background="White"
             Loaded="Control_Loaded"
             d:DataContext="{d:DesignData /_DesignData/ExtensionListToolWindowVM.xaml}"
             d:DesignHeight="455.41" d:DesignWidth="399.916">
    <UserControl.Resources>
        <ResourceDictionary>
            <!-- 
            To customize a style provided by the toolkit, you need to make the resources 
            available by including the resource dictionary from the toolkit:
            -->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="{x:Static toolkit:ToolkitResourceKeys.ThemeResourcesUri}"/>
            </ResourceDictionary.MergedDictionaries>

            <!--<Style TargetType="TextBox" BasedOn="{StaticResource {x:Static toolkit:ToolkitResourceKeys.TextBoxStyleKey}}">
                <Setter Property="BorderBrush" Value="Red" />
            </Style>-->

            <!--<Style TargetType="Button" BasedOn="{StaticResource {x:Static shell:VsResourceKeys.ThemedDialogButtonStyleKey}}">
                <Setter Property="Foreground" Value="Green" />
            </Style>-->
            <BooleanToVisibilityConverter x:Key="boolToVisi"/>
            <model:EmptyConverter x:Key="notEmptyToVisi" Inner="{StaticResource boolToVisi}" Negate="True"/>
            <model:EmptyConverter x:Key="emptyToVisi" Inner="{StaticResource boolToVisi}"/>
            <DataTemplate x:Key="extensionListTemplate" DataType="{x:Type model:ExtensionItem}">
                <Grid HorizontalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.ColumnSpan="99" x:Name="parent" Orientation="Horizontal">
                        <Label FontWeight="Bold">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Title}"/>
                                <TextBlock Text="(no name)" Visibility="{Binding Title, Converter={StaticResource emptyToVisi}}"/>
                            </StackPanel>
                        </Label>
                        <Border CornerRadius="5" BorderThickness="1" BorderBrush="{Binding Foreground,ElementName=text}"
                                    VerticalAlignment="Center" Padding="5,0"
                                    Visibility="{Binding ShortCutKey,Converter={StaticResource notEmptyToVisi}}">
                            <TextBlock Text="{Binding ShortCutKey}" FontFamily="Consolas" x:Name="text"/>
                        </Border>
                    </StackPanel>
                    <TextBlock Text="{Binding ClassName}" Width="150" FontSize="10" Margin="10,0,0,0" Grid.Row="1"/>
                    <TextBlock Text="{Binding DllPath}" FontSize="10" HorizontalAlignment="Right" Grid.Row="1" Grid.Column="1" TextWrapping="NoWrap"/>
                </Grid>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <!-- toolbar -->
        <StackPanel Margin="3" Orientation="Horizontal">
            <StackPanel.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Static shell:VsResourceKeys.ButtonStyleKey}}">
                    <Setter Property="Padding" Value="10,0"/>
                    <Setter Property="Margin" Value="0,0,5,0"/>
                    <Setter Property="MinWidth" Value="0"/>
                </Style>
            </StackPanel.Resources>
            <Button Click="AddItem_Click">+ Add</Button>
            <Button Click="Delete_Click" IsEnabled="{Binding IsSelected}">🗙 Delete</Button>
            <Button Click="Run_Click" IsEnabled="{Binding IsSelected}">▶ Run</Button>
            <Button Click="ButtonMore_Click">
                <Button.Content>More▾</Button.Content>
                <Button.ContextMenu>
                    <ContextMenu Style="{StaticResource {x:Static shell:VsResourceKeys.ContextMenuStyleKey}}">
                        <MenuItem Header="📋 Copy extension" Click="Copy_Click"/>
                        <MenuItem Header="Add new extension project to solution" Click="AddProj_Click"/>
                        <MenuItem Header="Add config as solution item" Click="AddConfig_Click"/>
                        <MenuItem Header="Check all" Click="CheckAll_Click"/>
                        <Separator/>
                        <MenuItem Header="Reload" Click="Load_Click"/>
                        <MenuItem Header="Sync to DTE" Click="SyncToDte_Click"/>
                        <MenuItem Header="Save" Click="Save_Click"/>
                        <MenuItem Header="🐛Debug" Click="Debug_Click"/>
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>
        </StackPanel>
        <!-- list of textensions -->
        <ListBox Grid.Row="1" ItemsSource="{Binding Model.Extensions}" SelectedItem="{Binding SelectedItem}"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 ItemTemplate="{StaticResource extensionListTemplate}">
        </ListBox>
        <!-- editor -->
        <StackPanel Grid.Row="2" Visibility="{Binding SelectedItem,Converter={StaticResource notEmptyToVisi}}">
            <StackPanel.Resources>
                <Style TargetType="Label" BasedOn="{StaticResource {x:Static shell:VsResourceKeys.ThemedDialogLabelStyleKey}}">
                    <Setter Property="Margin" Value="0,5,0,0"/>
                    <Setter Property="FontWeight" Value="Bold"/>
                    <Setter Property="Padding" Value="0,0"/>
                </Style>

                <!--<Style TargetType="TextBox" BasedOn="{StaticResource {x:Static toolkit:ToolkitResourceKeys.TextBoxStyleKey}}">-->
                <Style TargetType="TextBox" BasedOn="{StaticResource {x:Static shell:VsResourceKeys.TextBoxStyleKey}}">
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="MinHeight" Value="23"/>
                    <!-- copy from button -->
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
            </StackPanel.Resources>
            <Border Margin="3">
                <TextBlock FontWeight="Bold">Selected item</TextBlock>
            </Border>
            <StackPanel Margin="10">
                <TextBlock Foreground="Red" Padding="2" Visibility="{Binding ValidationMessage,Converter={StaticResource notEmptyToVisi}}"><Run>⚠</Run><Run Text="{Binding ValidationMessage}"></Run></TextBlock>
                <Label Content="Title"/>
                <TextBox Text="{Binding SelectedItem.Title, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="Key Shortcut"/>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding SelectedItem.ShortCutKey, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox Grid.Column="1" Text="&lt;Press key here&gt;" KeyDown="Shortcut_KeyDown" PreviewKeyDown="Shortcut_KeyDown"/>
                </Grid>
                <Label Content="Class Name"/>
                <ComboBox IsEditable="True" IsTextSearchEnabled="True" DropDownOpened="PickClass_Opened" Text="{Binding SelectedItem.ClassName}" />

                <Label>
                    <TextBlock ToolTip="You can use $(SolutionDir),$(Self) or any environment variable like %APP_MY_PATH%.">DLL Path 🛈</TextBlock>
                </Label>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding SelectedItem.DllPath, UpdateSourceTrigger=PropertyChanged}"/>
                    <Button Grid.Column="1" Padding="5,0" Width="30" Click="BrowseDll_Click" MinWidth="0">...</Button>
                </Grid>

            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
