<#@ template debug="false" hostSpecific="true" language="C#" #>
<#@ output extension=".vsct" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Text.RegularExpressions" #>
<#@ assembly name="System.Xml"#>
<#@ assembly name="System.Xml.Linq"#>
<#@ import namespace="System.Xml.Linq" #>
<#
	//WARNING: result file must have Compile property set to VSCTCompile
	//AND: set <ResourceName>Menus.ctmenu</ResourceName> to result vstc file manually in csproj	
	var package="guidSEPkg";
	var commands = new List<Command>();
	commands.Add(new Command(){Id=0x0100,Title="Show...",Visible=true,Name="SolutionEx.show"});
	for(var i=0;i<100;i++){
		commands.Add(new Command(){Id=0x200+i,Title="Solution Extension " + (i+1), Name="Solution.Extension"+(i+1)});
	}
#>
<?xml version="1.0" encoding="utf-8"?>
<CommandTable xmlns="http://schemas.microsoft.com/VisualStudio/2005-10-18/CommandTable" xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<Extern href="stdidcmd.h"/>
	<Extern href="vsshlids.h"/>
	<Commands package="<#=package#>">
		<Groups>
			<Group guid="<#=package#>CmdSet" id="MyMenuGroup" priority="0x0600">
				<Parent guid="guidSHLMainMenu" id="IDM_VS_MENU_EXTENSIONS"/>
			</Group>
			<Group guid="<#=package#>CmdSet" id="MySubMenuGroup" priority="0x0000">
				<Parent guid="<#=package#>CmdSet" id="MySubMenu"/>
			</Group>
		</Groups>
		<Menus>
			<Menu guid="<#=package#>CmdSet" id="MySubMenu" priority="0x0100" type="Menu">
				<Parent guid="<#=package#>CmdSet" id="MyMenuGroup"/>
				<Strings>
					<ButtonText>Solution extensions</ButtonText>
				</Strings>
			</Menu>
		</Menus>
		<Buttons>
<#
	foreach(var c in commands) 
	{
#>
			<Button guid="<#=package#>CmdSet" id="<#=c.IdSymbol#>" priority="0x0100" type="Button">
				<Parent guid="<#=package#>CmdSet" id="MySubMenuGroup" />
<#
		if(!c.Visible)
		{
#>
				<CommandFlag>DefaultInvisible</CommandFlag>
				<CommandFlag>DynamicVisibility</CommandFlag>
<#
		}
#>
				<Strings>
					<ButtonText><#=c.Title#></ButtonText>
<#		
		if (!String.IsNullOrEmpty(c.Name)) 
		{
#>
					<CommandName><#=c.Name#></CommandName>
<#
		}
#>
				</Strings>
			</Button>
<# 
	} 
#>
		</Buttons>
	</Commands>
	<Symbols>
		<GuidSymbol name="guidSHLMainMenu" value="{d309f791-903f-11d0-9efc-00a0c911004f}">
			<IDSymbol name="IDM_VS_MENU_EXTENSIONS" value="0x0091" />
		</GuidSymbol>
		<GuidSymbol name="<#=package#>" value="{ac39d443-46d7-4bf6-9691-552e1d504216}" />
		<GuidSymbol name="<#=package#>CmdSet" value="{7a30b1a0-c6bb-41ee-a9b4-f15017e2fee5}">
			<IDSymbol name="MyMenuGroup" value="0x1020" />
			<IDSymbol name="MySubMenuGroup" value="0x1021" />
			<IDSymbol name="MySubMenu" value="0x2000" />
<#
	foreach(var c in commands) 
	{
		var v = "0x" + c.Id.ToString("X4");
#>
			<IDSymbol name="<#=c.IdSymbol#>" value="<#=v#>" />
<# 
	} 
#>
		</GuidSymbol>
	</Symbols>
</CommandTable>
<#+
	// Define a simple class to represent a command
	class Command {
		public int Id;
		public string Title;
		public string Name;
		public string Parent;
		public string IdSymbol { get { return "id" + Id.ToString("X3")+"cmd"; } } //warn about max len
		public bool Visible = false;
	}
#>
