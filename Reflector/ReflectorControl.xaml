<UserControl x:Class="Reflector.ReflectorControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Reflector"
             xmlns:conv="clr-namespace:SolutionExtensions"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignData data.json, Type=local:ReflectorRoot}"    
             >
    <Grid>
        <Grid.Resources>
            <BooleanToVisibilityConverter x:Key="boolToVisi"/>
            <conv:EmptyConverter x:Key="notEmptyToVisi" Inner="{StaticResource boolToVisi}" Negate="True"/>
            <conv:EmptyConverter x:Key="emptyToVisi" Inner="{StaticResource boolToVisi}"/>
            <conv:EmptyConverter x:Key="notEmpty" Negate="True"/>
            <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Stroke" Color="#FF818181"/>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Fill" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Stroke" Color="#FF27C7F7"/>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Fill" Color="#FFCCEEFB"/>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#FF262626"/>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.Static.Checked.Fill" Color="#FF595959"/>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#FF1CC4F7"/>
            <SolidColorBrush x:Key="TreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#FF82DFFB"/>
            <Style x:Key="expanderStyle" TargetType="{x:Type ToggleButton}">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Width" Value="16"/>
                <Setter Property="Height" Value="16"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                                <Path x:Name="ExpandPath" 
                                      Data="{StaticResource TreeArrow}" 
                                      Fill="{StaticResource TreeViewItem.TreeArrow.Static.Fill}" 
                                      Stroke="{StaticResource TreeViewItem.TreeArrow.Static.Stroke}">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                    </Path.RenderTransform>
                                </Path>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="RenderTransform" TargetName="ExpandPath">
                                        <Setter.Value>
                                            <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Fill}"/>
                                    <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.Static.Checked.Stroke}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Stroke}"/>
                                    <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Fill}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsChecked" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Stroke" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"/>
                                    <Setter Property="Fill" TargetName="ExpandPath" Value="{StaticResource TreeViewItem.TreeArrow.MouseOver.Checked.Fill}"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="tvItemContainer" TargetType="TreeViewItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TreeViewItem">
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <ToggleButton x:Name="Expander" ClickMode="Press" 
                                              IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                                              Style="{StaticResource expanderStyle}"
                                              />
                                <ContentPresenter x:Name="PART_Header" Grid.Column="1"
                                                  ContentSource="Header" 
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1"/>
                            </Grid>
                            
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <ControlTemplate TargetType="ContentControl" x:Key="tvItemTemplate">
                <Border BorderBrush="{TemplateBinding Background}" 
                        HorizontalAlignment="Stretch"
                        Background="{TemplateBinding Background}" 
                        BorderThickness="1" CornerRadius="4" Padding="10,5">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" SharedSizeGroup="c2"/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter/>
                        <StackPanel Orientation="Horizontal" Grid.Column="1"
                                    Margin="10,0,0,0">
                            <StackPanel.Resources>
                                <Style TargetType="Button">
                                    <Setter Property="Width" Value="40"/>
                                    <Setter Property="FontFamily" Value="Courier New"/>
                                    <Setter Property="Margin" Value="0,0,5,0"/>
                                </Style>
                            </StackPanel.Resources>
                            <Button Content=".prop" Visibility="{Binding CanExpandProperties, Converter={StaticResource boolToVisi}}" Click="ExpandProperties_Click"/>
                            <Button Content="{}{intf}" Visibility="{Binding CanExpandInterfaces, Converter={StaticResource boolToVisi}}" Click="ExpandInterfaces_Click"/>
                            <Button Content="met()" Visibility="{Binding CanExpandMethods, Converter={StaticResource boolToVisi}}" Click="ExpandMethods_Click"/>
                            <Button Content="[enum]" Visibility="{Binding CanExpandEnumerable, Converter={StaticResource boolToVisi}}" Click="ExpandEnumerable_Click"/>
                            <Button Content="GEN" Click="Generate_Click"/>
                        </StackPanel>                        
                    </Grid>
                </Border>
            </ControlTemplate>
            <Style TargetType="ContentControl" x:Key="tvItem">
                <Setter Property="Template" Value="{StaticResource tvItemTemplate}"/>
            </Style>
            <HierarchicalDataTemplate 
                DataType="{x:Type local:ReflectorRoot}"
                ItemsSource="{Binding Path=Children}">
                <TextBlock>Root:<Run Text="{Binding RootType}"/></TextBlock>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate 
                DataType="{x:Type local:ReflectorPropertyValue}"
                ItemsSource="{Binding Path=Children}">
                <ContentControl Style="{StaticResource tvItem}" Background="#80ff80">
                    <TextBlock>
                    <Run>(p)</Run>
                    <Run Text="{Binding PropertyName}" FontWeight="Bold"/> 
                    <Run Text="{Binding PropertyTypeName}"/>
                    <Run>= </Run>
                    <Run Text="{Binding ValueSimpleText}"/>
                    </TextBlock>
                </ContentControl>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate 
                DataType="{x:Type local:ReflectorMethod}"
                ItemsSource="{Binding Path=Children}">
                <ContentControl Style="{StaticResource tvItem}" Background="#8080ff">
                    <TextBlock>
                    <Run>(m)</Run>
                    <Run Text="{Binding MethodName}" FontWeight="Bold"/> 
                    <Run Text="{Binding Signature}" FontFamily="Courier New"/>
                    </TextBlock>
                </ContentControl>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate 
                DataType="{x:Type local:ReflectorEnumItem}"
                ItemsSource="{Binding Path=Children}">
                <ContentControl Style="{StaticResource tvItem}" Background="#40ff40">
                    <TextBlock>
                    <Run>[</Run><Run Text="{Binding Index}"/>]:
                    <Run Text="{Binding ValueSimpleText}"/>
                    <Run Text="{Binding ValueTypeName}" FontWeight="Bold"/>
                    </TextBlock>
                </ContentControl>
            </HierarchicalDataTemplate>
            <HierarchicalDataTemplate DataType="{x:Type local:ReflectorInterface}" 
                ItemsSource="{Binding Path=Children}">
                <ContentControl Style="{StaticResource tvItem}" Background="#FFFF00">
                    <TextBlock>
                    <Run>{intf}</Run>
                    <Run Text="{Binding ValueTypeName}" FontWeight="Bold"/>
                    </TextBlock>
                </ContentControl>
            </HierarchicalDataTemplate>
        </Grid.Resources>
        <TreeView x:Name="treeView" ItemsSource="{Binding Children}" Grid.IsSharedSizeScope="True"
                  ItemContainerStyle="{StaticResource tvItemContainer}">
        </TreeView>
    </Grid>
</UserControl>
